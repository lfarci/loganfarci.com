name: "Manage Azure Resources"

on:
  push:
    branches:
      - main
    paths:
      - "infra/**"
  workflow_dispatch:
    inputs:
      action:
        description: "Choose an action to perform"
        required: true
        type: choice
        options:
          - Deploy
          - Destroy

permissions:
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  IS_DEPLOY: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'Deploy') }}
  IS_DESTROY: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'Destroy' }}

jobs:
  deploy:
    name: "Deploy Azure Resources"
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: ${{ steps.output.outputs.host_name }}
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
            -backend-config="key=${{ secrets.BLOB_NAME }}" \
            -backend-config="access_key=${{ secrets.ACCESS_KEY }}"

      - name: Terraform Plan
        if: ${{ env.IS_DEPLOY == 'true' }}
        id: plan
        run: |
          terraform plan \
            -var="subscription_id=${{ secrets.SUBSCRIPTION_ID }}" \
            -var="workload_name=lfarci" \
            -out=tfplan

      - name: Terraform Destroy
        if: ${{ env.IS_DESTROY == 'true' }}
        id: destroy
        run: |
          terraform plan \
            -var="subscription_id=${{ secrets.SUBSCRIPTION_ID }}" \
            -var="workload_name=lfarci" \
            -out=tfplan \
            -destroy

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve tfplan

      - name: Terraform Output
        if: ${{ env.IS_DEPLOY == 'true' }}
        id: output
        run: |
          host_name="https://$(terraform output -raw static_web_host_name)"
          name_servers=$(terraform output -json dns_zone_name_servers)
          cleaned_name_servers=${name_servers:1:-1}
          echo "host_name=$host_name" >> $GITHUB_OUTPUT
          echo "name_servers=$cleaned_name_servers" >> $GITHUB_OUTPUT

      - name: Write summary
        if: ${{ env.IS_DEPLOY == 'true' }}
        run: |
          echo "## ☁️ Azure Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Default host name: `${{ steps.output.outputs.host_name }}`." >> $GITHUB_STEP_SUMMARY
          echo "- DNS name servers:" >> $GITHUB_STEP_SUMMARY
          
          IFS=',' read -ra servers <<< "${{ steps.output.outputs.name_servers }}"
          for server in "${servers[@]}"; do
            echo "  - `$server`" >> $GITHUB_STEP_SUMMARY
          done
